name: Frontend CI/CD for Testnet Environment

on:
  workflow_call:
    inputs:
      app_name:
        description: "App name in gitops"
        required: true
        type: string
        default: ""
      env:
        description: "Specify the deployment environment"
        required: true
        type: string
        default: "testnet"
      ref:
        description: "Specify the branch, tag or SHA to deploy"
        required: true
        default: "main"
        type: string
      tag_field:
        description: "Nodereal-app tag field"
        required: false
        type: string
        default: ".nodereal-app.image.tag"
      git_sync_path:
        description: "Git sync path"
        required: false
        type: string
        default: "prod/gitops/tf-nodereal-prod-noderealus/web-ui/dcellar-web-ui/values.yaml"

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
        with:
          ref: ${{inputs.ref}}
          fetch-depth: 0
      - name: Get Commit SHA
        id: commit_sha
        run: |
          echo "COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache Rush Dependencies
        uses: actions/cache@v4
        with:
          path: |
            common/temp/install-run
            common/temp/build-cache
            ~/.rush
          key: ${{ runner.os }}-${{ hashFiles('rush.json') }}
      - name: Cache PNPM Dependencies
        uses: actions/cache@v4
        with:
          path: |
            common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install Rush Dependencies
        run: |
          node common/scripts/install-run-rush.js install -t ${{ inputs.app_name }}
      - name: Build Rush Project
        run: |
          COMMIT_SHA=${{ steps.commit_sha.outputs.COMMIT_SHA }} node common/scripts/install-run-rush.js build -t ${{ inputs.app_name }}
      - name: Deploy Rush Project
        run: |
          node common/scripts/install-run-rush.js deploy -p ${{ inputs.app_name }}
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: image meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ inputs.app_name}}-${{ inputs.env }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=sha
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: apps/${{ inputs.app_name}}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      # - name: Upload Static Files to Prod S3 Bucket
      #   env:
      #     APP_NAME: ${{ inputs.app_name }}
      #     STATIC_BUCKET: ${{ secrets.PROD_S3_BUCKET }}
      #   run: |
      #     aws s3 cp apps/${APP_NAME}/.next/static s3://${STATIC_BUCKET}/static/${APP_NAME}/_next/static --recursive --cache-control "public, max-age=31536000"
      #     aws s3 cp apps/${APP_NAME}/public s3://${STATIC_BUCKET}/static/${APP_NAME} --recursive --cache-control "public, max-age=31536000"
      # - name: Checkout GitOps Repository for Diff Commits üõéÔ∏è
      #   uses: actions/checkout@v4
      #   with:
      #     repository: node-real/nodereal-app
      #     token: ${{ secrets.GO_MODULES_TOKEN }}
      #     path: nodereal-app
      # - name: Retrieve Online Version Commit ID
      #   id: get_online_commit_id
      #   run: |
      #     COMMIT_ID=$(yq eval "${{ inputs.tag_field }}" "nodereal-app/${{ inputs.git_sync_path }}")
      #     echo "commit_id=${COMMIT_ID}" >> $GITHUB_OUTPUT
      # - name: Checkout üõéÔ∏è
      #   uses: actions/checkout@v4
      #   with:
      #     ref: ${{inputs.ref}}
      #     fetch-depth: 0
      # - name: Retrieve Release Diff Commits
      #   id: get_diff_commits
      #   continue-on-error: true
      #   run: |
      #     CURRENT_HASH=${{ steps.commit_sha.outputs.COMMIT_SHA }}
      #     LAST_BUILD_HASH=${{steps.get_online_commit_id.outputs.commit_id}}
      #     DIFF=""
      #     if [ -z "$LAST_BUILD_HASH" ]
      #     then
      #           echo "Unable to find last commit by bot, skipping diff gen"
      #     else
      #           DIFF=$(git log ${LAST_BUILD_HASH}...${CURRENT_HASH} --pretty=format:%s )
      #           echo $DIFF
      #     fi
      #     echo 'DIFF<<EOF' >> $GITHUB_ENV
      #     echo "${DIFF}" >> $GITHUB_ENV
      #     echo 'EOF' >> $GITHUB_ENV
      # - name: Checkout Public Github workflows üõéÔ∏è
      #   uses: actions/checkout@v4
      #   with:
      #     repository: 'node-real/public-github-workflows'
      #     token: ${{ secrets.GO_MODULES_TOKEN }}
      # - name: Prune Commit Messages
      #   id: prune_commit_msg
      #   continue-on-error: true
      #   uses: actions/github-script@v7
      #   with:
      #     script: |
      #       const diff_commits = `${{env.DIFF}}`
      #       const script = require("${{ github.workspace }}/.github/utils/parse-diff-commits.js");
      #       await script({diff_commits, core});
      # - name: Checkout üõéÔ∏è
      #   uses: actions/checkout@v4
      #   with:
      #     ref: ${{inputs.ref}}
      #     fetch-depth: 0
      - name: Generate Artifacts
        run: |
          mkdir temp
          echo "${{ steps.prune_commit_msg.outputs.commits }}" > temp/commit_changes
          echo "${{ steps.commit_sha.outputs.COMMIT_SHA }}" > temp/commit_sha
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "${{ github.event.issue.number }}_prod_artifacts"
          path: temp
          if-no-files-found: error

  # CD:
  #   runs-on: [prod-cicd-runners]
  #   needs: [CI]
  #   steps:
  #     - name: Checkout GitOps Config Repository üõéÔ∏è
  #       uses: actions/checkout@v4
  #       with:
  #         repository: node-real/nodereal-app
  #         token: ${{ secrets.GO_MODULES_TOKEN }}
  #     - name: Download Artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: "${{ github.event.issue.number }}_prod_artifacts"
  #         path: ./artifacts
  #     - name: Output Commit Changes
  #       id: output_commits_changes
  #       run: |
  #         DIFF=$(cat artifacts/commit_changes)
  #         echo 'DIFF<<EOF' >> $GITHUB_ENV
  #         echo "${DIFF}" >> $GITHUB_ENV
  #         echo 'EOF' >> $GITHUB_ENV
  #     - name: Output Commit SHA
  #       id: output_commit_sha
  #       run: |
  #         COMMIT_SHA=$(cat artifacts/commit_sha)
  #         echo "commit_sha=${COMMIT_SHA}" >> $GITHUB_OUTPUT
  #     - name: Clear Artifacts
  #       uses: geekyeggo/delete-artifact@v5
  #       with:
  #         name: "${{ github.event.issue.number }}_prod_artifacts"
  #     - name: Clean Local Artifacts
  #       run: |
  #         rm -rf artifacts
  #     - name: update image tag in gitops config repo
  #       run: |
  #         yq e "${{ inputs.tag_field }} = \"${{ steps.output_commit_sha.outputs.commit_sha }}\"" -i "${{ inputs.git_sync_path}}"
  #     - name: Set Pull Request Branch Name
  #       id: vars
  #       run: echo "branch-name=github-action-patches/${{ inputs.app_name }}-${{ inputs.env }}/${{ steps.output_commit_sha.outputs.commit_sha }}" >> $GITHUB_OUTPUT
  #     - name: Echo build id
  #       id: echo_build
  #       run: |
  #         echo "build_id=${{ steps.output_commit_sha.outputs.commit_sha }}" >> $GITHUB_OUTPUT
  #     - name: Create Pull Request for Image Update
  #       uses: peter-evans/create-pull-request@v6
  #       with:
  #         token: ${{ secrets.GO_MODULES_TOKEN }}
  #         commit-message: Update Image Tag
  #         title: "[web-ui:${{ inputs.app_name }}-${{ inputs.env }}] bot auto-PR by submitted ${{ github.triggering_actor || github.event.issue.user.login }}"
  #         body: |
  #           ${{ env.DIFF }}
  #           ## Other Info
  #           - Original Code Changes: ${{ github.event.issue.html_url || github.event.pull_request._links.html.href || 'main' }}
  #           - Build Id: ${{ steps.output_commit_sha.outputs.commit_sha }}
  #         branch: ${{ steps.vars.outputs.branch-name }}
  #         labels: |
  #           prod
