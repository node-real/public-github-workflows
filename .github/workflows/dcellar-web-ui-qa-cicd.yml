name: Frontend CI/CD for QA Environment

on:
  workflow_call:
    inputs:
      app_name:
        description: 'App name in gitops'
        type: string
        required: false
        default: ''
      env:
        description: 'Specify the deployment environment'
        type: string
        default: 'qa'
      tag_field:
        description: 'Deployment tag field'
        type: string
        required: false
        default: '.nodereal-app.image.tag'
      git_sync_path:
        description: 'Path for Git synchronization'
        type: string
        required: false
        default: 'qa/gitops/qa-us/web-ui/dcellar-web-ui/values.yaml'
      preview_url:
        description: 'URL for QA preview'
        type: string
        required: false
        default: 'https://dcellar-qa.fe.nodereal.cc'

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: start
        run: |
          echo "time={$(date +'%Y-%m-%dT%H:%M:%S')}" >> $GITHUB_OUTPUT
      - name: Start Job and Comment Trigger
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          comment-id: ${{ github.event.comment.id }}
          body: |
            ++++++${{ steps.start.outputs.time }}++++++
            Action Runner: https://github.com/node-real/dcellar-fe/actions/runs/${{github.run_id}}
          reactions: rocket
      - name: Github API Request
        id: request
        uses: octokit/request-action@v2.x
        with:
          route: ${{ github.event.issue.pull_request.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Retrieve Pull Request Information
        id: pr_data
        run: |
          echo "ref=${{ fromJson(steps.request.outputs.data).head.ref }}" >> $GITHUB_OUTPUT
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ fromJson(steps.request.outputs.data).head.repo.full_name }}
          ref: ${{ steps.pr_data.outputs.ref }}
          fetch-depth: 0
      - name: Get Commit SHA
        id: commit_sha
        run: |
          echo "COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache Rush Dependencies
        uses: actions/cache@v4
        with:
          path: |
            common/temp/install-run
            common/temp/build-cache
            ~/.rush
          key: ${{ runner.os }}-${{ hashFiles('rush.json') }}
      - name: Cache PNPM Dependencies
        uses: actions/cache@v4
        with:
          path: |
            common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install Rush Dependencies
        run: |
          node common/scripts/install-run-rush.js install -t ${{ inputs.app_name}}
      - name: Build Rush Project
        run: |
          COMMIT_SHA=${{ steps.commit_sha.outputs.COMMIT_SHA }} node common/scripts/install-run-rush.js build -t ${{ inputs.app_name}}
      - name: Deploy Rush Project
        run: |
          node common/scripts/install-run-rush.js deploy -p ${{ inputs.app_name}}
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: image meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ inputs.app_name}}-${{ inputs.env }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=sha
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: apps/${{ inputs.app_name}}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Upload Static Files to QA S3 Bucket
        env:
          APP_NAME: ${{ inputs.app_name }}
          STATIC_BUCKET: ${{ secrets.QA_S3_BUCKET }}
        run: |
          aws s3 cp apps/${APP_NAME}/.next/static s3://${STATIC_BUCKET}/static/${APP_NAME}/_next/static --recursive --cache-control "public, max-age=31536000" --metadata '{"Cache-Control":"max-age=31536000"}'
          aws s3 cp apps/${APP_NAME}/public s3://${STATIC_BUCKET}/static/${APP_NAME} --recursive --cache-control "public, max-age=31536000" --metadata '{"Cache-Control":"max-age=31536000"}'
      - name: Checkout GitOps Repository for Diff Commits üõéÔ∏è
        uses: actions/checkout@v4
        with:
          repository: node-real/nodereal-app
          token: ${{ secrets.GO_MODULES_TOKEN }}
          path: nodereal-app
      - name: Retrieve Online Version Commit ID
        id: get_online_commit_id
        run: |
          COMMIT_ID=$(yq eval "${{ inputs.tag_field }}" "nodereal-app/${{ inputs.git_sync_path }}")
          echo "commit_id=${COMMIT_ID}" >> $GITHUB_OUTPUT
      - name: Checkout  üõéÔ∏è
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ fromJson(steps.request.outputs.data).head.repo.full_name }}
          ref: ${{ steps.pr_data.outputs.ref }}
          fetch-depth: 0
      - name: Retrieve Release Diff Commits
        id: get_diff_commits
        continue-on-error: true
        run: |
          CURRENT_HASH=${{steps.commit_sha.outputs.COMMIT_SHA}}
          LAST_BUILD_HASH=${{steps.get_online_commit_id.outputs.commit_id}}
          DIFF=""
          if [ -z "$LAST_BUILD_HASH" ]
          then
                echo "Unable to find last commit by bot, skipping diff gen"
          else
                DIFF=$(git log ${LAST_BUILD_HASH}...${CURRENT_HASH} --pretty=format:%s )
                echo $DIFF
          fi
          echo 'DIFF<<EOF' >> $GITHUB_ENV
          echo "${DIFF}" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Checkout Public Github workflows üõéÔ∏è
        uses: actions/checkout@v4
        with:
          repository: 'node-real/public-github-workflows'
          token: ${{ secrets.GO_MODULES_TOKEN }}
      - name: Prune Commit Messages
        id: prune_commit_msg
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            const diff_commits = `${{env.DIFF}}`
            const script = require("${{ github.workspace }}/.github/utils/parse-diff-commits.js");
            await script({diff_commits, core});
      - name: Generate Artifacts
        run: |
          mkdir temp
          echo "${{ steps.prune_commit_msg.outputs.commits }}" > temp/commit_changes
          echo "${{ steps.commit_sha.outputs.COMMIT_SHA }}" > temp/commit_sha
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "${{ inputs.app_name}}_${{ github.event.issue.number }}_qa_artifacts"
          path: temp
          if-no-files-found: error
      - name: Add Project Labels
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["${{ inputs.app_name}}"]
            })
  CD:
    runs-on: [qa-cicd-runners-large]
    needs: [CI]
    steps:
      - name: Checkout GitOps Config Repository üõéÔ∏è
        uses: actions/checkout@v4
        with:
          repository: node-real/nodereal-app
          token: ${{ secrets.GO_MODULES_TOKEN }}
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: "${{ inputs.app_name}}_${{ github.event.issue.number }}_qa_artifacts"
          path: ./artifacts
      - name: Output Commit Changes
        id: output_commits_changes
        run: |
          DIFF=$(cat artifacts/commit_changes)
          echo 'DIFF<<EOF' >> $GITHUB_ENV
          echo "${DIFF}" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Output Commit SHA
        id: output_commit_sha
        run: |
          COMMIT_SHA=$(cat artifacts/commit_sha)
          echo "commit_sha=${COMMIT_SHA}" >> $GITHUB_OUTPUT
      - name: Clear Artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: "${{ inputs.app_name}}_${{ github.event.issue.number }}_qa_artifacts"
      - name: Clean Local Artifacts
        run: |
          rm -rf artifacts
      - name: Update Image Tag in GitOps Config
        run: |
          yq e "${{ inputs.tag_field }} = \"${{ steps.output_commit_sha.outputs.commit_sha }}\"" -i "${{ inputs.git_sync_path }}"
      - name: Set Pull Request Branch Name
        id: vars
        run: |
          echo "branch-name=github-action-patches/${{ inputs.app_name}}/${{ steps.output_commit_sha.outputs.commit_sha }}" >> $GITHUB_OUTPUT
      - name: Create Pull Request for Image Update
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GO_MODULES_TOKEN }}
          commit-message: Update Image Tag
          title: "[web-ui:${{ inputs.app_name}}] bot auto-PR by submitted ${{ github.triggering_actor || github.event.issue.user.login }}"
          body: |
            ${{ env.DIFF }}
            ## Other Info
            - Original Code Changes: ${{ github.event.issue.html_url || github.event.pull_request._links.html.href || 'master' }}
            - Build Id: ${{ steps.output_commit_sha.outputs.commit_sha }}
          branch: ${{ steps.vars.outputs.branch-name }}
          labels: |
            qa
      - name: Create Version Comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          comment-id: ${{ github.event.comment.id }}
          body: |
            ++++++
            Congrats, qa-deploy successfully!
            Preview Url: ${{ inputs.preview_url }}
            Build Id: ${{ steps.output_commit_sha.outputs.commit_sha }}
          reactions: hooray, rocket
  Job-Failure-Feedback:
    runs-on: [qa-cicd-runners]
    if: ${{ always() && contains(join(needs.*.result, ','), 'failure') }}
    needs: [CI, CD]
    steps:
      - name: Create Job Failure Feedback
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ github.event.comment.id }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            ++++++
            Sorry, this runner occurs some unexpected errors, please see [the link](https://github.com/node-real/dcellar-fe/actions/runs/${{github.run_id}}) for more detail.
          reactions: confused
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
